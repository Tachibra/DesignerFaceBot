import os
from dotenv import load_dotenv
from pyrogram import Client, filters
from PIL import Image

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")

OVERLAY_PATH = "overlay.png"

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

app = Client("bot", bot_token=BOT_TOKEN, api_id=API_ID, api_hash=API_HASH)

@app.on_message(filters.photo & filters.mentioned)
async def handle_image(client, message):
    try:
        print("üì• –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –±–æ—Ç–∞")

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        photo_path = await message.download()
        print(f"üìÅ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {photo_path}")

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        with Image.open(photo_path).convert("RGBA") as base_img:
            width, height = base_img.size
            print(f"üñº –†–∞–∑–º–µ—Ä –±–∞–∑–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width}x{height}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ PNG
            if not os.path.exists(OVERLAY_PATH):
                print("‚ùå –§–∞–π–ª overlay.png –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                await message.reply("–§–∞–π–ª overlay.png –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                return

            print("üîß –û—Ç–∫—Ä—ã–≤–∞–µ–º overlay.png")
            with Image.open(OVERLAY_PATH).convert("RGBA") as overlay:
                scale_factor = width // 3
                overlay_ratio = overlay.height / overlay.width
                new_overlay = overlay.resize((scale_factor, int(scale_factor * overlay_ratio)))

                pos_x = 0
                pos_y = height - new_overlay.height

                print(f"üìå –ù–∞–∫–ª–∞–¥—ã–≤–∞–µ–º overlay –≤ —Ç–æ—á–∫—É: ({pos_x}, {pos_y})")
                base_img.alpha_composite(new_overlay, (pos_x, pos_y))

                output_path = f"output_{message.id}.png"
                base_img.save(output_path)
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_path}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.reply_photo(output_path)
        print("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

        # –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        os.remove(output_path)
        os.remove(photo_path)
        print("üßπ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è üò¢")

app.run()
